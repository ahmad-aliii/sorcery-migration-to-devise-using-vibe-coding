# The first thing you need to configure is which modules you need in your app.
# The default is nothing which will include only core features (password encryption, login/logout).
#
# Available submodules are: :user_activation, :http_basic_auth, :remember_me,
# :reset_password, :session_timeout, :brute_force_protection, :activity_logging,
# :magic_login, :external
Rails.application.config.sorcery.submodules = []

# Here you can configure each submodule's features.
Rails.application.config.sorcery.configure do |config|
  # -- core --
  # What controller action to call for non-authenticated users. You can also
  # override the 'not_authenticated' method of course.
  # Default: `:not_authenticated`
  config.not_authenticated_action = :not_authenticated

  # When a non logged-in user tries to enter a page that requires login, save
  # the URL he wants to reach, and send him there after login, using 'redirect_back_or_to'.
  # Default: `true`
  config.save_return_to_url = true

  # Set domain option for cookies; Useful for remember_me submodule.
  # Default: `nil`
  config.cookie_domain = nil

  # Set token randomness. (e.g. user activation tokens)
  # The length of the result string is about 4/3 of `token_randomness`.
  # Default: `15`
  config.token_randomness = 15

  # -- session timeout --
  # How long in seconds to keep the session alive.
  # Default: `3600`
  config.session_timeout = 3600

  # Use the last action as the beginning of session timeout.
  # Default: `false`
  config.session_timeout_from_last_action = false

  # -- user config --
  config.user_config do |user|
    # -- core --
    # Specify username attributes, for example: [:username, :email].
    # Default: `[:email]`
    user.username_attribute_names = [:email]

    # Change *virtual* password attribute, the one which is used until an encrypted one is generated.
    # Default: `:password`
    user.password_attribute_name = :password

    # Downcase the username before trying to authenticate, default is false
    # Default: `false`
    user.downcase_username_before_authenticating = true

    # Change default email attribute.
    # Default: `:email`
    user.email_attribute_name = :email

    # Change default crypted_password attribute.
    # Default: `:crypted_password`
    user.crypted_password_attribute_name = :crypted_password

    # What pattern to use to join the password with the salt
    # Default: `""`
    user.salt_join_token = ""

    # Change default salt attribute.
    # Default: `:salt`
    user.salt_attribute_name = :salt

    # How many times to apply encryption to the password.
    # Default: 1 in test env, `nil` otherwise
    user.stretches = 1 if Rails.env.test?

    # Encryption key used to encrypt reversible encryptions such as AES256.
    # WARNING: If used for users' passwords, changing this key will leave passwords undecryptable!
    # Default: `nil`
    user.encryption_key = nil

    # Use an external encryption class.
    # Default: `nil`
    user.custom_encryption_provider = nil

    # Encryption algorithm name. See 'encryption_algorithm=' for available options.
    # Default: `:bcrypt`
    user.encryption_algorithm = :bcrypt

    # Make this configuration inheritable for subclasses. Useful for ActiveRecord's STI.
    # Default: `false`
    user.subclasses_inherit_config = false
  end

  # This line must come after the 'user config' block.
  # Define which model authenticates with sorcery.
  config.user_class = "User"
end
